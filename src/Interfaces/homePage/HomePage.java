/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.homePage;

import Interfaces.login.LoginFrame;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author sopro
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * @return the conectado
     */
    public Boolean getConectado() {
        return conectado;
    }

    /**
     * @param conectado the conectado to set
     */
    public void setConectado(Boolean conectado) {
        this.conectado = conectado;
    }

    /**
     * @return the email
     */
    public String getEmail() {
        return email;
    }

    /**
     * @param email the email to set
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Creates new form HomePage
     */
    public Boolean getLogoutControll() {
        return logoutControll;
    }

    /**
     * @param logoutControll the logoutControll to set
     */
    public void setLogoutControll(Boolean logoutControll) {
        this.logoutControll = logoutControll;
    }

    /**
     * @return the socketCliente
     */
    public PrintStream out;
    public BufferedReader in;
    BufferedReader read;
    JSONObject jsonHomePage = new JSONObject();
    JSONObject jServidor;
    private Boolean logoutControll;
    private String email;
    private Boolean conectado;
    public Socket getSocketCliente() {
        return socketCliente;
    }

    /**
     * @param socketCliente the socketCliente to set
     */
    public void setSocketCliente(Socket socketCliente) {
        this.socketCliente = socketCliente;
    }
    private Socket socketCliente = null;
    private EditarUserPane editarUser;
    private ExcluirPane excluirUser;
    public HomePage(Socket socket, String email) {
        initComponents();       
        setEmail(email);
        setSocketCliente(socket);
        setLogoutControll(false);
    }

    /**
     * @return the loginF
     */
    public LoginFrame getLoginF() {
        return loginF;
    }

    /**
     * @param loginF the loginF to set
     */
    public void setLoginF(LoginFrame loginF) {
        this.loginF = loginF;
    }

    /**
     * @return the logoutControll
     */
    private LoginFrame loginF;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbLocalD = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btLogout = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        btMenuEditarUsuario = new javax.swing.JMenuItem();
        btMenuExcluir = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));
        jPanel4.setInheritsPopupMenu(true);

        jLabel3.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("HOME PAGE");

        lbLocalD.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        btLogout.setBackground(new java.awt.Color(0, 0, 0));
        btLogout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btLogout.setForeground(new java.awt.Color(255, 51, 51));
        btLogout.setText("Logout");
        btLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(lbLocalD)
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207)
                .addComponent(lbLocalD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLogout)
                .addContainerGap())
        );

        jMenu2.setText("Usu√°rio");

        btMenuEditarUsuario.setText("Editar");
        btMenuEditarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuEditarUsuarioActionPerformed(evt);
            }
        });
        jMenu2.add(btMenuEditarUsuario);

        btMenuExcluir.setText("Excluir");
        btMenuExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuExcluirActionPerformed(evt);
            }
        });
        jMenu2.add(btMenuExcluir);
        jMenu2.add(jSeparator3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Produto");

        jMenuItem4.setText("Novo Produto");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogoutActionPerformed
        // TODO add your handling code here:
        new Thread() {
            @Override
            public void run() {
                tratarLogout();
            }
        }.start();
    }//GEN-LAST:event_btLogoutActionPerformed

    private void btMenuEditarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuEditarUsuarioActionPerformed
       this.editarUser = new EditarUserPane(this, true, socketCliente, getEmail());
       this.editarUser.setVisible(true);
    }//GEN-LAST:event_btMenuEditarUsuarioActionPerformed

    private void btMenuExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuExcluirActionPerformed
        // TODO add your handling code here:
        this.excluirUser = new ExcluirPane(this, true, socketCliente);
        this.excluirUser.setVisible(true);
        Boolean excluido = this.excluirUser.getExcluido();
        if(excluido.equals(true)){
            setConectado(false);
        }
        new Thread() {
            @Override
            public void run() {
                tratarLogout();
            }
        }.start();
        
    }//GEN-LAST:event_btMenuExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new HomePage(null,null).setVisible(true);
            }
        });
    }

    private void tratarLogout() {
        new Thread() {
            @Override
            public void run() {
                JSONObject jsonLogin = new JSONObject();
                jsonLogin.put("operacao", 8);

                try {
                    out = new PrintStream(getSocketCliente().getOutputStream());
                    out.println(jsonLogin.toString());
                } catch (IOException ex) {
                    Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
                }
                String resposta = esperaResposta();
                jServidor = new JSONObject(resposta);
                Integer operacao=jServidor.getInt("operacao");
                if (operacao.equals(8)) {
                    if (jServidor.getBoolean("erro") == false) {
                        JSONArray msg = jServidor.getJSONArray("mensagem");
                        JOptionPane.showConfirmDialog(null, msg.get(0).toString(), "Logout", JOptionPane.DEFAULT_OPTION);
                        mataJanela();
                        this.interrupt();                      
                    } else {
                        JOptionPane.showConfirmDialog(null, jServidor.getString("mensagem"), "Logout", JOptionPane.DEFAULT_OPTION);
                    }
                }

            }
        }.start();
    }

    private void mataJanela(){
        setLogoutControll(true);
        this.dispose();
    }
    
    private String esperaResposta() {
       String ln = null;
        try {
            read = new BufferedReader(new InputStreamReader(getSocketCliente().getInputStream()));
            try {
                char[] cbuf = new char[2048];
                
                while ((read.read(cbuf)) != 0) {
                    ln = String.valueOf(cbuf);
                    cbuf = new char[2048];
                    PrintStream saida = null;
                    System.out.print(ln);
                    try {
                        saida = new PrintStream(getSocketCliente().getOutputStream());
                    } catch (IOException ex) {
                        System.out.println("ERRO");
                    }
                    System.out.println("");
                    System.out.println("ln: " + ln);
                    return ln;
                }

            } catch (IOException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            System.out.println("Nao funcionou");
        }
        return ln;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btLogout;
    private javax.swing.JMenuItem btMenuEditarUsuario;
    private javax.swing.JMenuItem btMenuExcluir;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel lbLocalD;
    // End of variables declaration//GEN-END:variables
}
